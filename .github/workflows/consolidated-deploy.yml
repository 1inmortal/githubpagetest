---
name: Consolidated Build and Deploy

on:
  push:
    branches:
      - main
    paths:
      - '**/*.html'
      - '**/*.css'
      - '**/*.js'
      - '**/*.py'
      - 'Dockerfile'
      - 'package.json'
      - '**/*.md'
  workflow_dispatch:

jobs:
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Scan for secrets with trufflehog
        uses: trufflesecurity/trufflehog@main
        with:
          scanArguments: --regex --entropy=False .

  codeql-analysis:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
    strategy:
      fail-fast: false
      matrix:
        language: ["javascript", "typescript"]
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v4
      - name: "Initialize CodeQL"
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
      - name: "Perform CodeQL Analysis"
        uses: github/codeql-action/analyze@v3

  generate-sitemap:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate sitemap
        uses: cicirello/generate-sitemap@v1.10.2
        with:
          base-url-path: https://1inmortal.github.io/githubpagetest/
          additional-paths: |
            /index.html
            /Blog/
            /Certificados/
            /Evidencias/
            /assets/
            /data/
            /docs/
            /tools/
            /src/
            /react-ui-login/
            /README.md
            /CONTRIBUTING.md
            /SECURITY.md
            /CODE_OF_CONDUCT.md
            /LICENSE

      - name: Commit and push sitemap
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add sitemap.xml
          git diff --staged --quiet || git commit -m "Update sitemap.xml [skip ci]"
          git push

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: [security-scan, codeql-analysis, generate-sitemap]
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Check if package.json exists
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: 'package.json'

      - name: Install dependencies if package.json exists
        if: steps.check_files.outputs.files_exists == true
        run: npm ci

      - name: Build project if package.json exists
        if: steps.check_files.outputs.files_exists == true
        run: npm run build

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: .

  docker-build:
    runs-on: ubuntu-latest
    needs: [security-scan, codeql-analysis, generate-sitemap]
    if: contains(github.event.head_commit.modified, 'Dockerfile') || contains(github.event.head_commit.modified, '*.py') || contains(github.event.head_commit.modified, '*.js')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push to Docker Hub
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/githubpagetest:${{ github.sha }} .
          docker tag ${{ secrets.DOCKER_USERNAME }}/githubpagetest:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/githubpagetest:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/githubpagetest:${{ github.sha }}
          docker push ${{ secrets.DOCKER_USERNAME }}/githubpagetest:latest

      - name: Build and push to GitHub Container Registry
        run: |
          docker build -t ghcr.io/${{ github.repository }}/proyecto-x:${{ github.sha }} -f "Evidencias/Proyecto x/Dockerfile" "Evidencias/Proyecto x/"
          docker tag ghcr.io/${{ github.repository }}/proyecto-x:${{ github.sha }} ghcr.io/${{ github.repository }}/proyecto-x:latest
          docker push ghcr.io/${{ github.repository }}/proyecto-x:${{ github.sha }}
          docker push ghcr.io/${{ github.repository }}/proyecto-x:latest 